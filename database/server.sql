
-- the server
CREATE TABLE SERVER
(SERVERID VARCHAR(20) PRIMARY KEY NOT NULL,
 OWNERID VARCHAR(20) NOT NULL
);
PREPARE CREATE_SERVER (VARCHAR, VARCHAR) AS
    INSERT INTO SERVER VALUES($1, $2);

-- represents a starboard in a server
CREATE TABLE STARBOARD
(BOARD_NAME VARCHAR(50) NOT NULL,
 CHANNELID VARCHAR(20) NOT NULL,
 SERVERID VARCHAR(20) NOT NULL,
 EMOJIID VARCHAR(20) NOT NULL,
 EMOJI_COUNT INTEGER NOT NULL,
 PRIMARY KEY (BOARD_NAME, SERVERID),
 CONSTRAINT BOARD_BELONG_TO_SERVER FOREIGN KEY (SERVERID)
     REFERENCES SERVER (SERVERID)
     ON DELETE CASCADE
     ON UPDATE CASCADE
);
PREPARE CREATE_STARBOARD (VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER) AS
    INSERT INTO STARBOARD VALUES($1, $2, $3, $4, $5);

-- represents a message cache for starboard,
-- this represents a starred message
CREATE TABLE STAR_MESSAGE
(MESGID VARCHAR(20) PRIMARY KEY NOT NULL,
 BOARD_NAME VARCHAR(50) NOT NULL,
 SERVERID VARCHAR(20) NOT NULL,
 CONSTRAINT BOARD_FOR_MESSAGE FOREIGN KEY (BOARD_NAME, SERVERID)
     REFERENCES STARBOARD (BOARD_NAME, SERVERID)
     ON DELETE CASCADE
     ON UPDATE CASCADE
);
PREPARE CREATE_STAR_MESSAGE (VARCHAR, VARCHAR, VARCHAR) AS
    INSERT INTO STAR_MESSAGE VALUES($1, $2, $3);

-- the class in a menu
CREATE TABLE CLASS
(CLASS_NUMBER VARCHAR(10) NOT NULL,
 SCHOOL_NAME VARCHAR(20) NOT NULL,
 CLASS_FULL_NAME VARCHAR(100) NOT NULL,
 CLASS_DESCRIPTION VARCHAR(200) DEFAULT NULL,
 PRIMARY KEY (CLASS_NUMBER, SCHOOL_NAME)
);
PREPARE CREATE_CLASS (VARCHAR, VARCHAR, VARCHAR, VARCHAR) AS
    INSERT INTO CLASS VALUES($1, $2, $3, $4);

-- group the classes together
CREATE TABLE CLASS_GROUP
(GROUP_ID SERIAL NOT NULL PRIMARY KEY,
GROUP_NAME VARCHAR(30) NOT NULL
);
PREPARE CREATE_CLASS_GROUP (INTEGER, VARCHAR) AS
    INSERT INTO CLASS_GROUP VALUES($1, $2);

-- connect classes to a generic group
CREATE TABLE CLASS_IN_GROUP_RELATION
(CLASS_NUMBER VARCHAR(10) NOT NULL,
SCHOOL_NAME VARCHAR(20) NOT NULL,
GROUP_ID INT,
PRIMARY KEY (CLASS_NUMBER, SCHOOL_NAME, GROUP_ID),
CONSTRAINT RELATION_TO_CLASS FOREIGN KEY (CLASS_NUMBER, SCHOOL_NAME)
    REFERENCES CLASS (CLASS_NUMBER, SCHOOL_NAME),
CONSTRAINT RELATION_TO_GROUP FOREIGN KEY (GROUP_ID)
    REFERENCES  CLASS_GROUP (GROUP_ID)
 );
PREPARE CREATE_CLASS_IN_GROUP_RELATION (VARCHAR, VARCHAR, INTEGER) AS
    INSERT INTO CLASS_IN_GROUP_RELATION VALUES($1, $2, $3);

-- represents a generic role, name is not supplied.
-- if name of role is required, do it through the discord
-- api
CREATE TABLE I_ROLE
(ROLE_ID VARCHAR(20) PRIMARY KEY
);
PREPARE CREATE_I_ROLE (VARCHAR) AS
    INSERT INTO I_ROLE VALUES($1);

-- associated an I_ROLE with an emoji
CREATE TABLE ROLE_ENTRY
(ROLE_ID VARCHAR(20) REFERENCES I_ROLE,
 EMOJI_ID VARCHAR(20) NOT NULL,
 PRIMARY KEY (ROLE_ID, EMOJI_ID)
);
PREPARE CREATE_ROLE_ENTRY (VARCHAR, VARCHAR) AS
    INSERT INTO ROLE_ENTRY VALUES($1, $2);

-- each class can have many role associated with it
-- this table associate class information to a ROLE_ENTRY.
-- this ensure the menu table is sufficiently abstracted
CREATE TABLE CLASS_ROLE
(
CLASS_NUMBER VARCHAR(10) NOT NULL,
SCHOOL_NAME VARCHAR(20) NOT NULL,
ROLE_ID VARCHAR(20) NOT NULL,
EMOJI_ID VARCHAR(20) NOT NULL,
PRIMARY KEY (CLASS_NUMBER, SCHOOL_NAME, ROLE_ID),
CONSTRAINT CLS_NUM_SCH_NAME_RELATE_TO_ROLE FOREIGN KEY (CLASS_NUMBER, SCHOOL_NAME)
    REFERENCES CLASS (CLASS_NUMBER, SCHOOL_NAME)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT ROLE_RELATE_TO_CLS FOREIGN KEY (ROLE_ID, EMOJI_ID)
    REFERENCES ROLE_ENTRY (ROLE_ID, EMOJI_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
PREPARE CREATE_CLASS_ROLE (VARCHAR, VARCHAR, VARCHAR, VARCHAR) AS
    INSERT INTO CLASS_ROLE VALUES($1, $2, $3, $4);

-- represents a group of roles, used for menu
CREATE TABLE ROLE_GROUP
(MENU_GROUP_NAME VARCHAR(50) NOT NULL,
 SERVERID VARCHAR(20) NOT NULL,
 CLASS_NUMBER VARCHAR(10) NOT NULL,
 SCHOOL_NAME VARCHAR(20) NOT NULL,
 ROLE_ID VARCHAR(20) NOT NULL,
 EMOJI_ID VARCHAR(20) NOT NULL,
 PRIMARY KEY (MENU_GROUP_NAME, SERVERID),
 CONSTRAINT GROUP_IN_SERVER FOREIGN KEY (SERVERID)
     REFERENCES SERVER (SERVERID)
     ON DELETE CASCADE
     ON UPDATE CASCADE,
 CONSTRAINT ROLE_GROUP_RELATION
     FOREIGN KEY (ROLE_ID, EMOJI_ID)
    REFERENCES ROLE_ENTRY (ROLE_ID, EMOJI_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
PREPARE CREATE_ROLE_GROUP (VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR) AS
    INSERT INTO ROLE_GROUP VALUES($1, $2, $3, $4, $5, $6);

-- connect messages to a menu group

-- represents a menu
CREATE TABLE ROLE_MENU
(MENUMSGID VARCHAR(20) PRIMARY KEY NOT NULL,
 CHANNELID VARCHAR(20) NOT NULL,
 MENU_GROUP_NAME VARCHAR(50) NOT NULL,
 SERVERID VARCHAR(20) NOT NULL,
 CONSTRAINT MENU_BELONG_TO_CLASS_ROLE_GROUP FOREIGN KEY (MENU_GROUP_NAME, SERVERID)
     REFERENCES ROLE_GROUP (MENU_GROUP_NAME, SERVERID)
     ON DELETE CASCADE
     ON UPDATE CASCADE
);
PREPARE CREATE_ROLE_MENU (VARCHAR, VARCHAR, VARCHAR, VARCHAR) AS
    INSERT INTO ROLE_MENU VALUES($1, $2, $3, $4);

